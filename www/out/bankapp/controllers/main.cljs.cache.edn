;; Analyzed by ClojureScript 1.7.48
{:use-macros {obj purnam.core, ! purnam.core, def.controller gyr.core, def.factory gyr.core, def.service gyr.core, arr purnam.core, def.module gyr.core, def.n purnam.core, def.config gyr.core}, :excludes #{}, :name bankapp.controllers.main, :imports nil, :requires {repl clojure.browser.repl, clojure.browser.repl clojure.browser.repl, jayq.core jayq.core}, :uses {html jayq.core, css jayq.core, $ jayq.core}, :defs {starter_controllers {:name bankapp.controllers.main/starter_controllers, :meta {:file nil}, :file "src/bankapp/controllers/main.cljs", :line 20, :column 1}, starter_controllers_AppCtrl {:name bankapp.controllers.main/starter_controllers_AppCtrl, :meta {:file nil}, :file "src/bankapp/controllers/main.cljs", :line 24, :column 1}, starter_controllers_PlaylistsCtrl {:name bankapp.controllers.main/starter_controllers_PlaylistsCtrl, :meta {:file nil}, :file "src/bankapp/controllers/main.cljs", :line 51, :column 1}, starter_controllers_PlaylistCtrl {:name bankapp.controllers.main/starter_controllers_PlaylistCtrl, :meta {:file nil}, :file "src/bankapp/controllers/main.cljs", :line 64, :column 1}, starter_controllers_mapCtrl {:name bankapp.controllers.main/starter_controllers_mapCtrl, :meta {:file nil}, :file "src/bankapp/controllers/main.cljs", :line 67, :column 1}, foo {:protocol-inline nil, :meta {:file "/home/jack/soft/bankApp/www/src/bankapp/controllers/main.cljs", :line 104, :column 7, :end-line 104, :end-column 10, :arglists (quote ([a b]))}, :name bankapp.controllers.main/foo, :variadic false, :file "src/bankapp/controllers/main.cljs", :end-column 10, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, arr {:protocol-inline nil, :meta {:file "/home/jack/soft/bankApp/www/src/bankapp/controllers/main.cljs", :line 107, :column 7, :end-line 107, :end-column 10, :arglists (quote ([]))}, :name bankapp.controllers.main/arr, :variadic false, :file "src/bankapp/controllers/main.cljs", :end-column 10, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {purnam.core purnam.core, gyr.core gyr.core}, :cljs.analyzer/constants {:seen #{:scope :title :id}, :order [:scope :title :id]}, :doc nil}